# üåê Gu√≠a de Despliegue - Comparativa de Veh√≠culos

Esta gu√≠a te ayudar√° a hacer tu aplicaci√≥n accesible desde internet para la presentaci√≥n de tu proyecto.

## üìã √çndice
1. [Prerequisitos](#prerequisitos)
2. [Configuraci√≥n DDNS](#configuraci√≥n-ddns)
3. [Configuraci√≥n del Router](#configuraci√≥n-del-router)
4. [Configuraci√≥n de la Aplicaci√≥n](#configuraci√≥n-de-la-aplicaci√≥n)
5. [Despliegue](#despliegue)
6. [Verificaci√≥n](#verificaci√≥n)
7. [Soluci√≥n de Problemas](#soluci√≥n-de-problemas)

---

## üîß Prerequisitos

### Software Requerido
- ‚úÖ Node.js (v16 o superior)
- ‚úÖ npm
- ‚úÖ MySQL Server
- ‚úÖ Git

### Verificaci√≥n del Sistema
```bash
node --version
npm --version
mysql --version
```

---

## üåç Configuraci√≥n DDNS

### Paso 1: Registrarse en No-IP (Recomendado)
1. Ve a https://www.noip.com/sign-up
2. Crea una cuenta gratuita
3. Confirma tu email
4. Ve a "Dynamic DNS" ‚Üí "Create Hostname"
5. Elige un nombre como: `tu-proyecto-comparativa.ddns.net`
6. **¬°ANOTA EXACTAMENTE EL NOMBRE!**

### Alternativas DDNS Gratuitas
- **DuckDNS**: https://www.duckdns.org (m√°s simple)
- **Freenom**: https://www.freenom.com (dominios .tk, .ml)
- **Dynu**: https://www.dynu.com

---

## üè† Configuraci√≥n del Router

### Paso 1: Acceder al Router
1. Abre un navegador web
2. Ve a `192.168.1.1` o `192.168.0.1`
3. Ingresa usuario y contrase√±a (normalmente `admin/admin`)

### Paso 2: Configurar DDNS
1. Busca la secci√≥n "DDNS" o "Dynamic DNS"
2. Habilita DDNS
3. Selecciona tu proveedor (No-IP, DuckDNS, etc.)
4. Ingresa:
   - **Username**: Tu usuario del servicio DDNS
   - **Password**: Tu contrase√±a del servicio DDNS
   - **Hostname**: El dominio que creaste (ej: `mi-proyecto.ddns.net`)
5. Guarda la configuraci√≥n

### Paso 3: Configurar Port Forwarding
En la secci√≥n "Port Forwarding" o "Virtual Servers":

| Nombre | Puerto Externo | IP Interna | Puerto Interno | Protocolo |
|--------|----------------|------------|----------------|-----------|
| Frontend | 3000 | 192.168.1.82 | 3000 | TCP |
| Backend | 4000 | 192.168.1.82 | 4000 | TCP |

**‚ö†Ô∏è IMPORTANTE**: Aseg√∫rate de que la IP interna sea `192.168.1.82` (tu PC actual).

---

## ‚öôÔ∏è Configuraci√≥n de la Aplicaci√≥n

### Paso 1: Configurar DDNS Autom√°ticamente
```bash
# Dale permisos de ejecuci√≥n a los scripts
chmod +x configure-ddns.sh
chmod +x start-production.sh
chmod +x stop-production.sh

# Ejecuta el configurador
./configure-ddns.sh
```

El script te pedir√° tu dominio DDNS y actualizar√° autom√°ticamente:
- `comparativa-backend/.env`
- `comparativa-frontend/.env`
- `comparativa-backend/server.js`

### Paso 2: Verificar Configuraci√≥n Manual (Opcional)

**Backend (.env):**
```env
NODE_ENV=production
PORT=4000
FRONTEND_URL=https://tu-dominio.ddns.net
```

**Frontend (.env):**
```env
REACT_APP_API_URL=https://tu-dominio.ddns.net/api/api
```

---

## üöÄ Despliegue

### Opci√≥n 1: Despliegue Autom√°tico (Recomendado)
```bash
./start-production.sh
```

Este script:
- ‚úÖ Verifica prerequisitos
- ‚úÖ Construye el frontend para producci√≥n
- ‚úÖ Inicia el backend en modo producci√≥n
- ‚úÖ Sirve el frontend optimizado
- ‚úÖ Muestra informaci√≥n de acceso

### Opci√≥n 2: Despliegue Manual

**Backend:**
```bash
cd comparativa-backend
npm install
NODE_ENV=production npm start &
cd ..
```

**Frontend:**
```bash
cd comparativa-frontend
npm install
npm run build
npx serve -s build -l 3000 &
cd ..
```

---

## ‚úÖ Verificaci√≥n

### Paso 1: Verificar Acceso Local
- Frontend: https://localhost:3000
- Backend: https://localhost:4000

### Paso 2: Verificar Acceso en Red Local
- Frontend: https://192.168.1.82:3000
- Backend: https://192.168.1.82:4000

### Paso 3: Verificar Acceso desde Internet
- Frontend: https://tu-dominio.ddns.net
- Backend: https://tu-dominio.ddns.net/api

### Comandos de Verificaci√≥n
```bash
# Verificar puertos activos
ss -tlnp | grep :3000
ss -tlnp | grep :4000

# Verificar logs
tail -f comparativa-backend/backend.log
tail -f frontend.log

# Probar conectividad externa (desde otro dispositivo)
curl https://tu-dominio.ddns.net/api
```

---

## üîß Gesti√≥n de la Aplicaci√≥n

### Iniciar la Aplicaci√≥n
```bash
./start-production.sh
```

### Detener la Aplicaci√≥n
```bash
./stop-production.sh
```

### Ver Logs en Tiempo Real
```bash
# Backend
tail -f comparativa-backend/backend.log

# Frontend
tail -f frontend.log
```

### Reiniciar Solo el Backend
```bash
cd comparativa-backend
npm restart
```

---

## üÜò Soluci√≥n de Problemas

### Problema: No puedo acceder desde internet

**Soluciones:**
1. **Verificar DDNS**: Ve a tu proveedor DDNS y confirma que tu IP p√∫blica est√© actualizada
2. **Verificar Port Forwarding**: Confirma las reglas en tu router
3. **Verificar Firewall**: 
   ```bash
   sudo ufw allow 3000
   sudo ufw allow 4000
   ```
4. **Verificar IP Externa**: Ve a https://whatismyipaddress.com

### Problema: Error de CORS

**Soluci√≥n**: Ejecuta nuevamente el configurador:
```bash
./configure-ddns.sh
```

### Problema: Puertos ocupados

**Soluci√≥n**: 
```bash
./stop-production.sh
./start-production.sh
```

### Problema: Base de datos no conecta

**Soluciones:**
```bash
# Iniciar MySQL
sudo systemctl start mysql

# Verificar status
sudo systemctl status mysql

# Verificar usuario de BD
mysql -u comparativa_user -p
```

### Problema: Frontend no carga

**Soluciones:**
1. Verificar build:
   ```bash
   cd comparativa-frontend
   npm run build
   ```
2. Limpiar cach√©:
   ```bash
   rm -rf node_modules package-lock.json
   npm install
   ```

---

## üì± Acceso desde M√≥vil

Para probar desde tu m√≥vil en la misma red:
- Conecta tu m√≥vil al mismo WiFi
- Ve a: `https://192.168.1.82:3000`

---

## üîê Consideraciones de Seguridad

### Para Presentaci√≥n (Temporal)
- ‚úÖ Configuraci√≥n actual es suficiente
- ‚úÖ Acceso por HTTP est√° bien para demo

### Para Producci√≥n Real (Futuro)
- üîí Implementar HTTPS con Let's Encrypt
- üîí Configurar firewall m√°s restrictivo
- üîí Usar variables de entorno m√°s seguras
- üîí Implementar rate limiting

---

## üìû Contacto y Soporte

Si tienes problemas durante la configuraci√≥n:
1. Revisa los logs con `tail -f`
2. Ejecuta `./stop-production.sh` y luego `./start-production.sh`
3. Verifica que MySQL est√© funcionando
4. Confirma la configuraci√≥n de tu router

---

## üéØ Checklist Final para la Presentaci√≥n

- [ ] DDNS configurado y funcionando
- [ ] Port forwarding configurado en router
- [ ] Aplicaci√≥n corriendo con `./start-production.sh`
- [ ] Acceso local funciona (192.168.1.82:3000)
- [ ] Acceso externo funciona (tu-dominio.ddns.net:3000)
- [ ] Base de datos con datos de prueba
- [ ] Backup de configuraci√≥n realizado

**¬°Tu aplicaci√≥n estar√° lista para la presentaci√≥n! üéâ** 